gateway tcpdump 
Download gcc make
downlaod mpssh 
make mpssh and add binary to the path

ulimit change permenantly 
http://superuser.com/questions/740000/modify-and-apply-limits-conf-without-reboot
/etc/security/limits.conf
root soft nofile 1048576
root hard nofile 1048576


/etc/pam.d/common-session
session required pam_limits.so

Check without restaring the machine
http://unix.stackexchange.com/a/108605
start a new shell and do ulimt -n  and cross check the new values


mpssh 'echo "* soft nofile 1048576" >> /etc/security/limits.conf' -f slaves   
mpssh 'echo "* hard nofile 1048576" >> /etc/security/limits.conf' -f slaves   
mpssh 'echo "root soft nofile 1048576" >> /etc/security/limits.conf' -f slaves   
mpssh 'echo "root hard nofile 1048576" >> /etc/security/limits.conf' -f slaves
Mrigesh • Now

mpssh 'echo "session required pam_limits.so" >> /etc/pam.d/common-session' -f slaves
mpssh 'tail -1 /etc/pam.d/common-session' -f slaves
root@losalamos:/home/starzl# mpssh 'ulimit -n' -f slaves
 [*] read (3) hosts from the list
 [*] executing "ulimit -n" as user "root" on each
 [*] spawning 3 parallel ssh sessions

gamma -> 1048576
alpha -> 1048576
beta  -> 1048576


mpssh "service ntp status" -f all
gamma     ->  * NTP server is running
alpha     ->  * NTP server is running
losalamos ->  * NTP server is running
beta      ->  * NTP server is running
Mrigesh • Now

ssh-keygen -t ed25519
id_ed25519  id_ed25519.pub



root@losalamos:/home/starzl# mpssh "grep 10 /etc/hosts" -f all
alpha     -> 10.0.0.2 losalamos.pc.cs.cmu.edu losalamos
alpha     -> 10.0.0.3 alpha.pc.cs.cmu.edu alpha
alpha     -> 10.0.0.4 beta.pc.cs.cmu.edu beta
alpha     -> 10.0.0.5 gamma.pc.cs.cmu.edu gamma
gamma     -> 10.0.0.5 gamma.pc.cs.cmu.edu	gamma
gamma     -> 10.0.0.2 losalamos.pc.cs.cmu.edu losalamos
gamma     -> 10.0.0.3 alpha.pc.cs.cmu.edu alpha
gamma     -> 10.0.0.4 beta.pc.cs.cmu.edu beta
gamma     -> 10.0.0.5 gamma.pc.cs.cmu.edu gamma
beta      -> 10.0.0.4 beta.pc.cs.cmu.edu	beta
beta      -> 10.0.0.2 losalamos.pc.cs.cmu.edu losalamos
beta      -> 10.0.0.3 alpha.pc.cs.cmu.edu alpha
beta      -> 10.0.0.4 beta.pc.cs.cmu.edu beta
beta      -> 10.0.0.5 gamma.pc.cs.cmu.edu gamma
losalamos -> 10.0.0.2 losalamos.pc.cs.cmu.edu losalamos
losalamos -> 10.0.0.3 alpha.pc.cs.cmu.edu alpha
losalamos -> 10.0.0.4 beta.pc.cs.cmu.edu beta
losalamos -> 10.0.0.5 gamma.pc.cs.cmu.edu gamma


 mpssh "echo umask 0022 >> /etc/profile" -f all
 
mpssh "wget -nv http://public-repo-1.hortonworks.com/ambari/ubuntu14/2.x/updates/2.2.0.0/ambari.list -O /etc/apt/sources.list.d/ambari.list" -f all
Mrigesh • Now


Using python  /usr/bin/python2
Setup ambari-server
Checking SELinux...
WARNING: Could not run /usr/sbin/sestatus: OK
Customize user account for ambari-server daemon [y/n] (n)? n
Adjusting ambari-server permissions and ownership...
Checking firewall status...
Checking JDK...
[1] Oracle JDK 1.8 + Java Cryptography Extension (JCE) Policy Files 8
[2] Oracle JDK 1.7 + Java Cryptography Extension (JCE) Policy Files 7
[3] Custom JDK
==============================================================================
Enter choice (1): 1
To download the Oracle JDK and the Java Cryptography Extension (JCE) Policy Files you must accept the license terms found at http://www.oracle.com/technetwork/java/javase/terms/license/index.html and not accepting will cancel the Ambari Server setup and you must install the JDK and JCE files manually.
Do you accept the Oracle Binary Code License Agreement [y/n] (y)? y
Downloading JDK from http://public-repo-1.hortonworks.com/ARTIFACTS/jdk-8u60-linux-x64.tar.gz to /var/lib/ambari-server/resources/jdk-8u60-linux-x64.tar.gz
jdk-8u60-linux-x64.tar.gz... 100% (172.8 MB of 172.8 MB)
Successfully downloaded JDK distribution to /var/lib/ambari-server/resources/jdk-8u60-linux-x64.tar.gz
Installing JDK to /usr/jdk64/
Successfully installed JDK to /usr/jdk64/
Downloading JCE Policy archive from http://public-repo-1.hortonworks.com/ARTIFACTS/jce_policy-8.zip to /var/lib/ambari-server/resources/jce_policy-8.zip

Successfully downloaded JCE Policy archive to /var/lib/ambari-server/resources/jce_policy-8.zip
Installing JCE policy...
Completing setup...
Configuring database...
Enter advanced database configuration [y/n] (n)? y
Configuring database...
==============================================================================
Choose one of the following options:
[1] - PostgreSQL (Embedded)
[2] - Oracle
[3] - MySQL
[4] - PostgreSQL
[5] - Microsoft SQL Server (Tech Preview)
[6] - SQL Anywhere
Mrigesh • Now
Mrigesh Kalvani


Send a message

==============================================================================
Enter choice (1): 1
Database name (ambari):
Postgres schema (ambari):
Username (ambari):
Enter Database Password (bigdata):
Default properties detected. Using built-in database.
Configuring ambari database...
Checking PostgreSQL...
About to start PostgreSQL
Configuring local database...
Connecting to local database...done.
Configuring PostgreSQL...
Extracting system views...
......ambari-admin-2.2.0.0.1310.jar

Adjusting ambari-server permissions and ownership...
Ambari Server 'setup' completed successfully.
root@losalamos:/home/starzl# ambari-server start
Using python  /usr/bin/python2
Starting ambari-server
Ambari Server running with administrator privileges.
About to start PostgreSQL
Organizing resource files at /var/lib/ambari-server/resources...
WARNING: setpgid(16692, 0) failed - [Errno 13] Permission denied
Server PID at: /var/run/ambari-server/ambari-server.pid
Server out at: /var/log/ambari-server/ambari-server.out
Server log at: /var/log/ambari-server/ambari-server.log
Waiting for server start....................
Ambari Server 'start' completed successfully.
